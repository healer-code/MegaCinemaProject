@using MegaCinemaCommon.BookingTicket
@using MegaCinemaWeb.Models;
@model MegaCinemaWeb.Models.TimeSessionViewModel

@{
    ViewBag.Title = ViewBag.FeatureTitle = "Đặt vé xem phim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var resultState = BookingTimeHelpers.ConvertJsontoBookingTime(Model.SeatTableState);
    var width = resultState.Width;
    var height = resultState.Height;
    var state = resultState.LstSeatStates;
    var modelTable = Model.SeatTableState;
}
@{
    var ticketDetail = (TicketDetailViewModel)ViewData["detailSessionTicket"];
}
<div class="row">
    <div class="ticket-user-detail">
        <input type="hidden" class="ticket-room-session" value=@ViewData["InfoTimeSession"] />
        <input type="text" class="ticket-room-time" value=@Model.TimeSessionID />
        <ul>
            <li>
                <p>
                    Số vé cho người lớn: <span>@ticketDetail.Adult</span>
                </p>
            </li>
            <li>
                <p>
                    Số vé cho người lớn - Vip: <span>@ticketDetail.AdultVip</span>
                </p>
            </li>
        </ul>
    </div>

</div>

<script src="~/scripts/js/jquery-1.6.4.min.js"></script>
<script src="~/scripts/js/jquery.signalR-2.2.1.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

<script type="text/javascript">
    $(document).ready(function () {
        UpdateSeatStateTable();

        //intialize signalIR
        var connectionHub = $.connection.seatRoomStateFilmHub;
        connectionHub.client.updateSeatState = function () {
            UpdateSeatStateTable();
        };
        $.connection.hub.start().done(function () {

        });


    });
    function UpdateSeatStateTable() {
        $.ajaxSetup({ cache: false });
        var dataPoints = [];
        // Get Data from GetData Function in Controller
        $.getJSON("/Booking/StateSeatRoom/",{ sessionFilm :@ViewData["InfoTimeSession"] }, function (data) {
            ReDrawPartialView();           
            //ReDrawQueueObject();
            //alert('load lai');
        })
    }

    function RedrawTable(xLocation, yLocation, state) {
        xLocation = parseInt(xLocation) + 1;
        yLocation = parseInt(yLocation) + 1;
        var tag = $('#seat-state-board-area tr:nth-child(' + yLocation + ')  td:nth-child(' + xLocation + ') p');
        if (state == 0) {
            if (tag.hasClass('ticket-clicked') && !tag.hasClass('booked-ticket')) {
                //not in case
                $('#seat-state-board-area tr:nth-child(' + yLocation + ') td:nth-child(' + xLocation + ') p').css('background-image', "url('../../Content/RoomFilm/selectedseat.png')");
            } else 
                if (tag.hasClass('ticket-clicked') && tag.hasClass('booked-ticket')) {
               $('#seat-state-board-area tr:nth-child(' + yLocation + ') td:nth-child(' + xLocation + ') p').css('background-image', "url('../../Content/RoomFilm/seatbooked.png')");
            }
        }

        if (state == 1) {

        }
    }

    function ReDrawQueueActiveObject() {
        for (var i = 0; i < listTicketSelect.length; i++) {
            var xLocation = parseInt(listTicketSelect[i].xLocation) + 1;
            var yLocation = parseInt(listTicketSelect[i].yLocation) + 1;
            var tag = $('#seat-state-board-area tr:nth-child(' + yLocation + ')  td:nth-child(' + xLocation + ') p');
            tag.addClass('ticket-clicked');
            if (tag.hasClass('ticket-clicked') && tag.hasClass('booked-ticket')) {
                tag.removeClass('ticket-clicked');

                if (tag.hasClass("normal-ticket")) {
                    adult = parseInt(adult) + 1;
                    console.log("RedrawTable: adult-ticket" + adult);
                }
                //hot ticket
                if (tag.hasClass("hot-ticket")) {
                    adultVip = parseInt(adultVip) + 1;
                    console.log("RedrawTable: adultVip-ticket" + adultVip);
                }

                //remove ticket select in queue
                console.log("ReDrawQueueActiveObject: " + listTicketSelect.length + " " + tag.attr('idseat'));
                for (var n = 0 ; n < listTicketSelect.length ; n++) {
                    console.log("ReDrawQueueActiveObject: " + n + " " +listTicketSelect[n].id);
                    if (listTicketSelect[n].id === tag.attr('idseat')) {
                        console.log("Id bị hủy khỏi queue là : " + tag.attr('idseat') + " -- " + listTicketSelect[n].id);
                        listTicketSelect.splice(n, 1);
                        break;
                    }
                }

                $('#seat-state-board-area tr:nth-child(' + yLocation + ') td:nth-child(' + xLocation + ') p').css('background-image', "url('../../Content/RoomFilm/seatbooked.png')");

                console.log("ReDrawQueueActiveObject after: " + listTicketSelect.length);
                ModalConfirm("Ghế của bạn đang giữ hiện đã được thanh toán, vui lòng chọn ghế khác");
            }

        }
    }

    function ReDrawQueueObject() {
        console.log("Số counter cho vé người lớn: " + adult + "- Số counter cho vé vip: " + adultVip);
        console.log("Độ dài queue: " + listTicketSelect.length);
        var resultQ;
        for (var n = 0; n < listTicketSelect.length; n++) {
            resultQ = resultQ + listTicketSelect[n].id + " ";
        }
        console.log("các vé trong hàng chờ hiện tại là " + resultQ);
        console.log("-----------");
        for (var i = 0; i < listTicketSelect.length; i++) {
            var xLocation = parseInt(listTicketSelect[i].xLocation) + 1;
            var yLocation = parseInt(listTicketSelect[i].yLocation) + 1;
            $('#seat-state-board-area tr:nth-child(' + yLocation + ')  td:nth-child(' + xLocation + ') p').addClass('ticket-clicked');
            $('#seat-state-board-area tr:nth-child(' + yLocation + ') td:nth-child(' + xLocation + ') p').css('background-image', "url('../../Content/RoomFilm/selectedseat.png')");

            RedrawTable(listTicketSelect[i].xLocation, listTicketSelect[i].yLocation, 0);
        }
    }
    function OnSucess(x,y) {
        if (x != null && y != null)
            RedrawTable(x, y, "BOOKED");
    }

    function ReDrawPartialView() {
        $('.tables-seat-area').load('/Booking/UpdateSeatState');

    }
</script>

<div class="row">
    <h4>Khu vực chọn vé của hệ thống</h4>
    <div class="tables-seat-area" style=" background-color: white">
        @Html.Action("UpdateSeatState", "Booking")
    </div>
</div>

<div class="row control-booking-area">
    <input type="button" class="btn btn-primary btn-submit-realtime" value="Đặt vé" />
</div>

@Html.Partial("_AlertBox")
<script src="~/scripts/js/bootstrap.min.js"></script>
<script src="~/Content/scripts/Client/js/bookingTicket.js"></script>

<style>
     .change-ticket {
        font-weight: bold;
    }

    .ticket-clicked {
        font-weight: bold;
        background-size: 100% 100%;
        background-position: top left;
    }

    .ticket-undo-click {
        font-weight: none;
    }

    .ticket {
        cursor: pointer;
        text-align: center;      
        position: absolute;       
        width: 25px;
        z-index: 1;
        height: 25px; 
    }
    .booked-ticket {
        color: red !important;
    }

    .normal-ticket {
        color: darkgoldenrod;
    }

    .hot-ticket {
        color: blue;
    }

    .none-ticket {
        color: black;
    }

    table.seat-state-board-area tr {
        margin-bottom: 5px;
    }
    table.seat-state-board-area td {
        margin-left: 5px;
    }
</style>